"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var apollo_server_express_1 = require("apollo-server-express");
exports.typeDefs = apollo_server_express_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  type Booking {\n    id: ID!\n    listing: Listing!\n    tenant: User!\n    checkIn: String!\n    checkOut: String!\n  }\n\n  type Bookings {\n    total: Int!\n    result: [Booking!]!\n  }\n\n  enum ListingType {\n    APARTMENT\n    HOUSE\n  }\n\n  type Listing {\n    id: ID!\n    title: String!\n    description: String!\n    image: String!\n    host: User!\n    type: ListingType!\n    address: String!\n    city: String!\n    bookings(limit: Int!, page: Int!): Bookings\n    bookingsIndex: String!\n    price: Int!\n    numOfGuests: Int!\n    country: String!\n    admin: String!\n  }\n\n  enum ListingsFilter {\n    PRICE_LOW_TO_HIGH\n    PRICE_HIGH_TO_LOW \n  }\n\n  type Listings {\n    region: String\n    total: Int!\n    result: [Listing!]!\n  }\n\n  type User {\n    id: ID!\n    name: String!\n    avatar: String!\n    contact: String!\n    hasWallet: Boolean!\n    income: Int\n    bookings(limit: Int!, page: Int!): Bookings\n    listings(limit: Int!, page: Int!): Listings!\n  }\n\n  type Viewer {\n    id: ID\n    token: String\n    avatar: String\n    hasWallet: Boolean\n    didRequest: Boolean!\n  }\n\n  type Query {\n    authUrl: String!\n    user(id: ID!): User!\n    listing(id: ID!): Listing!\n    listings(\n      location: String\n      filter: ListingsFilter!\n      limit: Int!\n      page: Int!\n    ): Listings!\n  }\n\n  input LogInInput {\n    code: String!\n  }\n\n  input ConnectStripeInput {\n    code: String!\n  }\n\n  input HostListingInput {\n    title: String!\n    description: String!\n    image: String!\n    type: ListingType!\n    address: String!\n    price: Int!\n    numOfGuests: Int!\n  }\n\n  input CreateBookingInput {\n    id: ID!\n    source: String!\n    checkIn: String!\n    checkOut: String!\n  }\n  \n  type Mutation {\n    logIn(input: LogInInput): Viewer!\n    logOut: Viewer!\n    connectStripe(input: ConnectStripeInput): Viewer!\n    disconnectStripe: Viewer!\n    hostListing(input: HostListingInput!): Listing!\n    createBooking(input: CreateBookingInput): Booking!\n  }\n"], ["\n  type Booking {\n    id: ID!\n    listing: Listing!\n    tenant: User!\n    checkIn: String!\n    checkOut: String!\n  }\n\n  type Bookings {\n    total: Int!\n    result: [Booking!]!\n  }\n\n  enum ListingType {\n    APARTMENT\n    HOUSE\n  }\n\n  type Listing {\n    id: ID!\n    title: String!\n    description: String!\n    image: String!\n    host: User!\n    type: ListingType!\n    address: String!\n    city: String!\n    bookings(limit: Int!, page: Int!): Bookings\n    bookingsIndex: String!\n    price: Int!\n    numOfGuests: Int!\n    country: String!\n    admin: String!\n  }\n\n  enum ListingsFilter {\n    PRICE_LOW_TO_HIGH\n    PRICE_HIGH_TO_LOW \n  }\n\n  type Listings {\n    region: String\n    total: Int!\n    result: [Listing!]!\n  }\n\n  type User {\n    id: ID!\n    name: String!\n    avatar: String!\n    contact: String!\n    hasWallet: Boolean!\n    income: Int\n    bookings(limit: Int!, page: Int!): Bookings\n    listings(limit: Int!, page: Int!): Listings!\n  }\n\n  type Viewer {\n    id: ID\n    token: String\n    avatar: String\n    hasWallet: Boolean\n    didRequest: Boolean!\n  }\n\n  type Query {\n    authUrl: String!\n    user(id: ID!): User!\n    listing(id: ID!): Listing!\n    listings(\n      location: String\n      filter: ListingsFilter!\n      limit: Int!\n      page: Int!\n    ): Listings!\n  }\n\n  input LogInInput {\n    code: String!\n  }\n\n  input ConnectStripeInput {\n    code: String!\n  }\n\n  input HostListingInput {\n    title: String!\n    description: String!\n    image: String!\n    type: ListingType!\n    address: String!\n    price: Int!\n    numOfGuests: Int!\n  }\n\n  input CreateBookingInput {\n    id: ID!\n    source: String!\n    checkIn: String!\n    checkOut: String!\n  }\n  \n  type Mutation {\n    logIn(input: LogInInput): Viewer!\n    logOut: Viewer!\n    connectStripe(input: ConnectStripeInput): Viewer!\n    disconnectStripe: Viewer!\n    hostListing(input: HostListingInput!): Listing!\n    createBooking(input: CreateBookingInput): Booking!\n  }\n"])));
var templateObject_1;
